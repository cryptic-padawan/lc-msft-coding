class Solution {
public:
    void solve(vector<vector<int>>&ans, vector<int>&temp,vector<int> nums, vector<bool>used)
    {
        if(temp.size()==nums.size())
            ans.push_back(temp);
        else 
        {
            for(int i=0;i<nums.size();i++)
            {
                if((i>0 and nums[i]==nums[i-1] and !used[i-1]) or used[i])
                    continue;
                used[i]=true;
                temp.push_back(nums[i]);
                solve(ans,temp,nums,used);
                used[i]=false;
                temp.erase(temp.begin()+temp.size()-1);
            }
        }
        return;
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        vector<int>temp;
        vector<bool>used(nums.size(),false);
        solve(ans,temp,nums,used);
        return ans;
    }
};
