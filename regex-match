class Solution {
public:
    bool isMatch(string s, string p) {
        int n = s.length(),m=p.length();
        vector<vector<bool>>dp(n+1,vector<bool>(m+1,0));
        dp[0][0]=1;
        for(int i=0;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(p[j-1]=='*')
                    dp[i][j] = dp[i][j-2] or (i and dp[i-1][j] and (s[i-1]==p[j-2] or p[j-2]=='.'));
                else
                    dp[i][j] = i and dp[i-1][j-1] and (s[i-1]==p[j-1] or p[j-1]=='.');
                        
            }
        }
        // for(int i=0;i<=n;i++)
        // {
        //     for(int j=0;j<=m;j++)
        //         cout<< dp[i][j]<< " ";
        //     cout<<endl;
        // }
        return dp[n][m];
    }
};
